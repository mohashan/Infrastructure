// <auto-generated />
using System;
using Infrastructure.Messenger.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Messenger.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    partial class MessengerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Messenger.Models.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorizationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<string>("HttpRequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndPoint = "https://sms.MyServices.com/Send",
                            FeatureId = 6,
                            HttpRequestBody = "{to:'@to',text:'@text'}",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7700),
                            IsDeleted = false,
                            Title = "SMS"
                        },
                        new
                        {
                            Id = 2,
                            EndPoint = "https://EMail.MyServices.com/Send",
                            FeatureId = 5,
                            HttpRequestBody = "{to:'@to',text:'@text'}",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7703),
                            IsDeleted = false,
                            Title = "e-Mail"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactTypeId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5587),
                            IsDeleted = false,
                            Title = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            ContactTypeId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5589),
                            IsDeleted = false,
                            Title = "SupportUser"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("ContactId", "FeatureId")
                        .IsUnique();

                    b.ToTable("ContactFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            FeatureId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6760),
                            IsDeleted = false,
                            Title = "FullName",
                            Value = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 1,
                            FeatureId = 5,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6764),
                            IsDeleted = false,
                            Title = "e-Mail",
                            Value = "Admin@MyServices.com"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 1,
                            FeatureId = 6,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6765),
                            IsDeleted = false,
                            Title = "MobileNumber",
                            Value = "+9898765432101"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 2,
                            FeatureId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6766),
                            IsDeleted = false,
                            Title = "FullName",
                            Value = "Support User"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 2,
                            FeatureId = 5,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6766),
                            IsDeleted = false,
                            Title = "e-Mail",
                            Value = "Support@MyServices.com"
                        },
                        new
                        {
                            Id = 6,
                            ContactId = 2,
                            FeatureId = 6,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(6767),
                            IsDeleted = false,
                            Title = "MobileNumber",
                            Value = "+9898765432102"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ContactId", "GroupId")
                        .IsUnique();

                    b.ToTable("ContactGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            GroupId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5669),
                            IsDeleted = false,
                            Title = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 2,
                            GroupId = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5671),
                            IsDeleted = false,
                            Title = "SupportUser"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5283),
                            IsDeleted = false,
                            Title = "People"
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5294),
                            IsDeleted = false,
                            Title = "Service"
                        },
                        new
                        {
                            Id = 3,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5295),
                            IsDeleted = false,
                            Title = "Device"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7537),
                            IsDeleted = false,
                            Title = "FullName"
                        },
                        new
                        {
                            Id = 2,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7541),
                            IsDeleted = false,
                            Title = "NationalCode"
                        },
                        new
                        {
                            Id = 3,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7542),
                            IsDeleted = false,
                            Title = "Address"
                        },
                        new
                        {
                            Id = 4,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7593),
                            IsDeleted = false,
                            Title = "Gender"
                        },
                        new
                        {
                            Id = 5,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7595),
                            IsDeleted = false,
                            Title = "e-Mail"
                        },
                        new
                        {
                            Id = 6,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7596),
                            IsDeleted = false,
                            Title = "MobileNumber"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(5496),
                            IsDeleted = false,
                            Title = "G1"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("ContactId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Server @param0 has a problem: @param1",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7784),
                            IsDeleted = false,
                            Title = "Server_Monitoring"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Service @param0 has a problem: @param1",
                            InsertDate = new DateTime(2023, 5, 17, 9, 57, 7, 448, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            Title = "Service_Monitoring"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Channel", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Feature", "Feature")
                        .WithMany("Channels")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.ContactType", "ContactType")
                        .WithMany()
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactType");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactFeature", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Contact", "Contact")
                        .WithMany("ContactFeatures")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Messenger.Models.Feature", "Feature")
                        .WithMany("ContactFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactGroup", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Contact", "Contact")
                        .WithMany("ContactGroup")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Messenger.Models.Group", "Group")
                        .WithMany("ContactGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Message", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Channel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Messenger.Models.Contact", "Contact")
                        .WithMany("Messages")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Messenger.Models.Template", "Template")
                        .WithMany("Messages")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("Contact");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Channel", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.Navigation("ContactFeatures");

                    b.Navigation("ContactGroup");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Feature", b =>
                {
                    b.Navigation("Channels");

                    b.Navigation("ContactFeatures");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Group", b =>
                {
                    b.Navigation("ContactGroups");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Template", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
