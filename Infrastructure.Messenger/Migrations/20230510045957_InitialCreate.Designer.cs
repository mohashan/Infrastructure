// <auto-generated />
using System;
using Infrastructure.Messenger.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Messenger.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    [Migration("20230510045957_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Messenger.Models.Channels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChannelRequestType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "{to:@MobileNumber,text:@Text}",
                            ChannelRequestType = 1,
                            EndPoint = "https://sms.MyServices.com/Send",
                            FeatureId = 6,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3801),
                            IsDeleted = false,
                            Name = "SMS"
                        },
                        new
                        {
                            Id = 2,
                            ChannelRequestType = 1,
                            EndPoint = "https://EMail.MyServices.com/Send",
                            FeatureId = 5,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3803),
                            IsDeleted = false,
                            Name = "e-Mail"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3745),
                            IsDeleted = false,
                            Name = "Admin",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3748),
                            IsDeleted = false,
                            Name = "SupportUser",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("FeatureId");

                    b.ToTable("ContactFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            FeatureId = 1,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3761),
                            IsDeleted = false,
                            Value = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 1,
                            FeatureId = 5,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3764),
                            IsDeleted = false,
                            Value = "Admin@MyServices.com"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 1,
                            FeatureId = 6,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3765),
                            IsDeleted = false,
                            Value = "+9898765432101"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 2,
                            FeatureId = 1,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3765),
                            IsDeleted = false,
                            Value = "Support User"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 2,
                            FeatureId = 5,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3766),
                            IsDeleted = false,
                            Value = "Support@MyServices.com"
                        },
                        new
                        {
                            Id = 6,
                            ContactId = 2,
                            FeatureId = 6,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3767),
                            IsDeleted = false,
                            Value = "+9898765432102"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3644),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3653),
                            IsDeleted = false,
                            Name = "Service"
                        },
                        new
                        {
                            Id = 3,
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3653),
                            IsDeleted = false,
                            Name = "Device"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3784),
                            IsDeleted = false,
                            Name = "FullName"
                        },
                        new
                        {
                            Id = 2,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3786),
                            IsDeleted = false,
                            Name = "NationalCode"
                        },
                        new
                        {
                            Id = 3,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3787),
                            IsDeleted = false,
                            Name = "Address"
                        },
                        new
                        {
                            Id = 4,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3788),
                            IsDeleted = false,
                            Name = "Gender"
                        },
                        new
                        {
                            Id = 5,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3789),
                            IsDeleted = false,
                            Name = "e-Mail"
                        },
                        new
                        {
                            Id = 6,
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 5, 10, 8, 29, 57, 29, DateTimeKind.Local).AddTicks(3790),
                            IsDeleted = false,
                            Name = "MobileNumber"
                        });
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Channels", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Feature", "Feature")
                        .WithMany("Channels")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.ContactType", "ContactType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactType");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.ContactFeatures", b =>
                {
                    b.HasOne("Infrastructure.Messenger.Models.Contact", "Contact")
                        .WithMany("ContactFeatures")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Messenger.Models.Feature", "Feature")
                        .WithMany("ContactFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Contact", b =>
                {
                    b.Navigation("ContactFeatures");
                });

            modelBuilder.Entity("Infrastructure.Messenger.Models.Feature", b =>
                {
                    b.Navigation("Channels");

                    b.Navigation("ContactFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
