// <auto-generated />
using System;
using Infrastructure.BaseUserManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.BaseUserManager.Migrations
{
    [DbContext(typeof(UserManagerDbContext))]
    [Migration("20230611204002_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4366318f-fc11-4909-96be-e6d00c07b6a3"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(372),
                            IsDeleted = false,
                            Name = "FullName"
                        },
                        new
                        {
                            Id = new Guid("5f6e5a83-4fd7-43f0-87b7-876423eaea28"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(379),
                            IsDeleted = false,
                            Name = "NationalCode"
                        },
                        new
                        {
                            Id = new Guid("95b6e8fd-67d9-4a24-aa00-44728e270963"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(380),
                            IsDeleted = false,
                            Name = "Address"
                        },
                        new
                        {
                            Id = new Guid("e4662c7b-97a4-4a62-9644-50498f81e565"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(382),
                            IsDeleted = false,
                            Name = "Gender"
                        },
                        new
                        {
                            Id = new Guid("ea8b4275-d881-4577-bf45-696e5320b7e3"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(384),
                            IsDeleted = false,
                            Name = "e-Mail"
                        },
                        new
                        {
                            Id = new Guid("45058ee7-bf5f-4c94-bd40-4a928aeb2901"),
                            DataType = "System.String",
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(386),
                            IsDeleted = false,
                            Name = "MobileNumber"
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f656b877-99ec-4034-b824-8be4da79d345"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(7019),
                            IsDeleted = false,
                            Name = "G1"
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1008c58-1d88-4898-99c0-3ff4f9a87ee2"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(7280),
                            IsDeleted = false,
                            Name = "Admin",
                            UserTypeId = new Guid("d6fb8547-d54c-4193-9b72-e3a67ad62708")
                        },
                        new
                        {
                            Id = new Guid("93cbfd70-522d-4c56-9290-5b4311afea30"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(7283),
                            IsDeleted = false,
                            Name = "SupportUser",
                            UserTypeId = new Guid("d6fb8547-d54c-4193-9b72-e3a67ad62708")
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.UserFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("UserId", "FeatureId");

                    b.ToTable("UserFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa5ada69-7f37-47eb-a849-db6a1ab3de70"),
                            FeatureId = new Guid("4366318f-fc11-4909-96be-e6d00c07b6a3"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(540),
                            IsDeleted = false,
                            Name = "FullName",
                            UserId = new Guid("b1008c58-1d88-4898-99c0-3ff4f9a87ee2"),
                            Value = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("3b869f1f-cb36-45c1-931b-97388148051f"),
                            FeatureId = new Guid("ea8b4275-d881-4577-bf45-696e5320b7e3"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(547),
                            IsDeleted = false,
                            Name = "e-Mail",
                            UserId = new Guid("b1008c58-1d88-4898-99c0-3ff4f9a87ee2"),
                            Value = "Admin@MyServices.com"
                        },
                        new
                        {
                            Id = new Guid("62b35656-9357-42f5-8bdf-3ceac9dca45c"),
                            FeatureId = new Guid("45058ee7-bf5f-4c94-bd40-4a928aeb2901"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(550),
                            IsDeleted = false,
                            Name = "MobileNumber",
                            UserId = new Guid("b1008c58-1d88-4898-99c0-3ff4f9a87ee2"),
                            Value = "+9898765432101"
                        },
                        new
                        {
                            Id = new Guid("6c41eed0-16ce-46e1-8915-6119b6fb3275"),
                            FeatureId = new Guid("4366318f-fc11-4909-96be-e6d00c07b6a3"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(552),
                            IsDeleted = false,
                            Name = "FullName",
                            UserId = new Guid("93cbfd70-522d-4c56-9290-5b4311afea30"),
                            Value = "Support User"
                        },
                        new
                        {
                            Id = new Guid("11231a07-7c1c-4f28-b28d-04bfa86e7ebb"),
                            FeatureId = new Guid("ea8b4275-d881-4577-bf45-696e5320b7e3"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(554),
                            IsDeleted = false,
                            Name = "e-Mail",
                            UserId = new Guid("93cbfd70-522d-4c56-9290-5b4311afea30"),
                            Value = "Support@MyServices.com"
                        },
                        new
                        {
                            Id = new Guid("0422cf02-7930-4ed9-9c60-f87db1e682b6"),
                            FeatureId = new Guid("45058ee7-bf5f-4c94-bd40-4a928aeb2901"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 744, DateTimeKind.Local).AddTicks(556),
                            IsDeleted = false,
                            Name = "MobileNumber",
                            UserId = new Guid("93cbfd70-522d-4c56-9290-5b4311afea30"),
                            Value = "+9898765432102"
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId", "GroupId");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39a8a732-6c8d-4759-85a3-8c3afa2030b6"),
                            GroupId = new Guid("f656b877-99ec-4034-b824-8be4da79d345"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(7688),
                            IsDeleted = false,
                            Name = "Admin",
                            UserId = new Guid("b1008c58-1d88-4898-99c0-3ff4f9a87ee2")
                        },
                        new
                        {
                            Id = new Guid("360d02e7-1577-426d-9c25-7a891452d7a1"),
                            GroupId = new Guid("f656b877-99ec-4034-b824-8be4da79d345"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(7696),
                            IsDeleted = false,
                            Name = "SupportUser",
                            UserId = new Guid("93cbfd70-522d-4c56-9290-5b4311afea30")
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6fb8547-d54c-4193-9b72-e3a67ad62708"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(6425),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("9ea818c5-089f-4b17-aec1-ce91758ada43"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(6445),
                            IsDeleted = false,
                            Name = "Service"
                        },
                        new
                        {
                            Id = new Guid("e3aa6baf-6bae-4425-b45b-e3b4efc61a0e"),
                            InsertDate = new DateTime(2023, 6, 12, 0, 10, 1, 743, DateTimeKind.Local).AddTicks(6447),
                            IsDeleted = false,
                            Name = "Device"
                        });
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.User", b =>
                {
                    b.HasOne("Infrastructure.BaseUserManager.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.UserFeature", b =>
                {
                    b.HasOne("Infrastructure.BaseUserManager.Models.Feature", "Feature")
                        .WithMany("UserFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.BaseUserManager.Models.User", "User")
                        .WithMany("UserFeatures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.UserGroup", b =>
                {
                    b.HasOne("Infrastructure.BaseUserManager.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.BaseUserManager.Models.User", "User")
                        .WithMany("UserGroup")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.Feature", b =>
                {
                    b.Navigation("UserFeatures");
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.Group", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Infrastructure.BaseUserManager.Models.User", b =>
                {
                    b.Navigation("UserFeatures");

                    b.Navigation("UserGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
